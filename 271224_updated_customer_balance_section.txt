//index.html

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Aaradhya Pharmaceuticals - Login</title>
  <link rel="stylesheet" href="styles/styles.css">
</head>
<body>
    <header>
    <h1>Home</h1>
    <a href="index.html">Home</a>
    </header>
    <main class="login-container">
          <div class="header-group">
            <img src="images/logo.jpg" alt="Aaradhya Pharmaceuticals Logo">
            <h2 style="text-align:center">Aaradhya Pharmaceuticals</h2>
          </div>
          <div class="login-group">
           <form id="loginForm" class="login-form">
            <h2 style="text-align:center">Login</h2>
            <label for="username">Username</label>
            <input type="text" id="username" name="username" placeholder="Enter your username">
            <label for="password">Password</label>
            <input type="password" id="password" name="password" placeholder="Enter your password">
            <button type="submit">Login</button>
            <a href="#" class="forgot-password">Forgot Password?</a>
            <p id="errorMessage" class="text-danger text-center mt-3"></p>
           </form>
	  </div>
    
    <section id="customer-balance-section" class="balance-container">
        <h2>Customer Balance</h2>
        <form id="balanceForm" class="balance-form">
            <label for="customerId">Customer ID</label>
            <input type="text" id="customerId" name="customerId" placeholder="Enter your Customer ID">
            <button type="button" id="fetchBalance">Fetch Balance</button>
        </form>
        <div id="balanceResult">
            <h3>Balance Details</h3>
            <table id="balanceTable" class="balance-table">
                <thead>
                    <tr>
                        <th>Invoice ID</th>
                        <th>Amount</th>
                        <th>Due Date</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Data will be dynamically populated -->
                </tbody>
            </table>
        </div>
    </section>
    </main>
    
        <footer>
            <a href="#">Contact Us</a> | <a href="#">Privacy Policy | <a href="offers.html">Offers</a>
		<p>&copy; 2024 Aaradhya Pharmaceuticals. All rights reserved.</p>
       </footer>
  <script src="scripts/config.js"></script>
  <script src="scripts/pagination.js"></script>
  <script src="scripts/google-sheets-api.js"></script>
  <script src="scripts/auth.js"></script>
 <!-- <script src="scripts/carousel.js"></script>-->
<script>
// Fetch Customer Balance using Google Sheets API
document.getElementById('fetchBalance').addEventListener('click', async () => {
    const customerId = document.getElementById('customerId').value;
    if (!customerId) {
        alert('Please enter a Customer ID');
        return;
    }

    try {
        const response = await fetch('https://script.google.com/macros/s/YOUR_SCRIPT_ID/exec?customerId=' + customerId);
        const data = await response.json();

        // Clear existing rows
        const balanceTableBody = document.querySelector('#balanceTable tbody');
        balanceTableBody.innerHTML = '';

        // Populate table with fetched data
        data.forEach(item => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${item.invoiceId}</td>
                <td>${item.amount}</td>
                <td>${item.dueDate}</td>
                <td>${item.status}</td>
            `;
            balanceTableBody.appendChild(row);
        });
    } catch (error) {
        console.error('Error fetching balance:', error);
        alert('Failed to fetch balance. Please try again later.');
    }
});
</script>
</body>
</html>


//customer.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Customer Dashboard</title>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
   <link rel="stylesheet" href="styles/style.css">
   <link rel="stylesheet" href="styles/offers.css">
</head>
<body>
    <header>
    <div class="dashboard-container">
<div id="welcome-message"></div>
<div class="d-flex justify-content-between align-items-center">
      <h1 class="fs-4">Welcome to Your Dashboard</h1>
      <button class="btn btn-danger" onclick="logout()">Logout</button>
    </div>
  </header>



      
    <main class="container my-4">
        <section id="misc">
            <h2 class="text-primary mb-3">Customer Ledger</h2>
            <div class="table-responsive">
            <table id="ledgerTable" class="table table-striped table-hover">
                <thead class="table-primary">
                    <tr>
                     
                        <th>Date</th>
                        <th>Type</th>
                        <th>Description</th>
                        <th>Debit</th>
                        <th>Credit</th>
                        <th>Balance</th>
                    </tr>
                </thead>
                <tbody id="ledgerTable">
                    <!-- Ledger entries will be dynamically loaded here -->
                </tbody>
            </table>
                 </div>
                    <div id="paginationContainer" class="mt-3"></div>
        </section>
    
    <section id="customer-balance-section" class="balance-container">
        <h2>Customer Balance</h2>
        <form id="balanceForm" class="balance-form">
            <label for="customerId">Customer ID</label>
            <input type="text" id="customerId" name="customerId" placeholder="Enter your Customer ID">
            <button type="button" id="fetchBalance">Fetch Balance</button>
        </form>
        <div id="balanceResult">
            <h3>Balance Details</h3>
            <table id="balanceTable" class="balance-table">
                <thead>
                    <tr>
                        <th>Invoice ID</th>
                        <th>Amount</th>
                        <th>Due Date</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Data will be dynamically populated -->
                </tbody>
            </table>
        </div>
    </section>
    </main>
    
       <footer>
            <a href="#">Contact Us</a> | <a href="#">Privacy Policy | <a href="offers.html">Offers</a>
		<p>&copy; 2024 Aaradhya Pharmaceuticals. All rights reserved.</p>
       </footer>
    <script src="scripts/pagination.js"></script>
    <script src="scripts/config.js"></script>
    <script src="scripts/google-sheets-api.js"></script>
    <script src="scripts/customer.js"></script>
    <script src="scripts/logout.js"></script>
<script>
// Fetch Customer Balance using Google Sheets API
document.getElementById('fetchBalance').addEventListener('click', async () => {
    const customerId = document.getElementById('customerId').value;
    if (!customerId) {
        alert('Please enter a Customer ID');
        return;
    }

    try {
        const response = await fetch('https://script.google.com/macros/s/YOUR_SCRIPT_ID/exec?customerId=' + customerId);
        const data = await response.json();

        // Clear existing rows
        const balanceTableBody = document.querySelector('#balanceTable tbody');
        balanceTableBody.innerHTML = '';

        // Populate table with fetched data
        data.forEach(item => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${item.invoiceId}</td>
                <td>${item.amount}</td>
                <td>${item.dueDate}</td>
                <td>${item.status}</td>
            `;
            balanceTableBody.appendChild(row);
        });
    } catch (error) {
        console.error('Error fetching balance:', error);
        alert('Failed to fetch balance. Please try again later.');
    }
});
</script>
</body>
</html>


//offers.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Special Offers</title>
    <link rel="stylesheet" href="styles/offers.css">
</head>
<body>
    <header>
        <h1>Exclusive Offers</h1>
        <a href="index.html">Home</a>
    </header>
    <main class="offers-container">
        <div class="offer-card">
            <img src="offer1.jpg" alt="Offer 1">
            <h2>Flat 20% Off</h2>
            <p>Enjoy a flat 20% discount on all generic medicines. Limited period offer!</p>
            <button>Claim Offer</button>
        </div>
        <div class="offer-card">
            <img src="offer2.jpg" alt="Offer 2">
            <h2>Buy 1 Get 1 Free</h2>
            <p>Buy one health supplement and get another absolutely free!</p>
            <button>Claim Offer</button>
        </div>
        <div class="offer-card">
            <img src="offer3.jpg" alt="Offer 3">
            <h2>Free Delivery</h2>
            <p>Free delivery on orders above â‚¹1000. Shop now and save more!</p>
            <button>Claim Offer</button>
        </div>
    
    <section id="customer-balance-section" class="balance-container">
        <h2>Customer Balance</h2>
        <form id="balanceForm" class="balance-form">
            <label for="customerId">Customer ID</label>
            <input type="text" id="customerId" name="customerId" placeholder="Enter your Customer ID">
            <button type="button" id="fetchBalance">Fetch Balance</button>
        </form>
        <div id="balanceResult">
            <h3>Balance Details</h3>
            <table id="balanceTable" class="balance-table">
                <thead>
                    <tr>
                        <th>Invoice ID</th>
                        <th>Amount</th>
                        <th>Due Date</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Data will be dynamically populated -->
                </tbody>
            </table>
        </div>
    </section>
    </main>
    
    <footer>
        <a href="#">Contact Us</a> | <a href="#">Privacy Policy | <a href="C:\Users\admin\Desktop\aaradhyaapp2\2612start\arc-main (1)\arc-main\offers.html">Offers</a>
        <p>&copy; 2024 Aaradhya Pharmaceuticals. All rights reserved.</p>
       
    </footer>
<script>
// Fetch Customer Balance using Google Sheets API
document.getElementById('fetchBalance').addEventListener('click', async () => {
    const customerId = document.getElementById('customerId').value;
    if (!customerId) {
        alert('Please enter a Customer ID');
        return;
    }

    try {
        const response = await fetch('https://script.google.com/macros/s/YOUR_SCRIPT_ID/exec?customerId=' + customerId);
        const data = await response.json();

        // Clear existing rows
        const balanceTableBody = document.querySelector('#balanceTable tbody');
        balanceTableBody.innerHTML = '';

        // Populate table with fetched data
        data.forEach(item => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${item.invoiceId}</td>
                <td>${item.amount}</td>
                <td>${item.dueDate}</td>
                <td>${item.status}</td>
            `;
            balanceTableBody.appendChild(row);
        });
    } catch (error) {
        console.error('Error fetching balance:', error);
        alert('Failed to fetch balance. Please try again later.');
    }
});
</script>
</body>
</html>


//staff1.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Staff Dashboard</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="styles/style.css">
    <link rel="stylesheet" href="styles/offers.css">
   <!-- <link rel="stylesheet" href="styles/table.css">-->
</head>
<body>
  <header>
    <div class="d-flex justify-content-between align-items-center">
      <h1 class="fs-4">Staff Management Dashboard</h1>
      <button class="btn btn-danger" onclick="logout()">Logout</button>
    </div>
  </header>
  <main class="container my-4">
    <section id="stockRates">
        <h2 class="text-primary mb-3">Company Stock and Rates</h2>
        <div class="table-responsive">
        <table id="stockTable" class="table table-striped table-hover">
            <thead class="table-primary">
                <tr>
                    <th>Company</th>
                    <th>Item</th>
                    <th>MRP</th>
                    <th>Rate</th>
                    <th>Available Stock</th>
                </tr>
            </thead>
            <tbody id="stockTable">
                <!-- Stock data will be dynamically loaded here -->
            </tbody>
        </table>
        </div>
        <div id="paginationContainerStock" class="d-flex justify-content-center align-items-center mt-3"></div>
    </section>

    <section id="customerBalance">
        <h2 class="text-primary mb-3">Customer Balance</h2>
        <div class="table-responsive">
        <table id="customerLedgerTable" class="table table-striped table-hover">
            <thead class="table-primary">
                <tr>
                    <th>Customer Name</th>
                    <th>Balance</th>
                    <th>Sale This Year</th>
                    <th>Sale This Month</th>
                    <th>Payment This Month</th>
                </tr>
            </thead>
            <tbody id="customerLedgerTable">
                <!-- Customer ledger data will be dynamically loaded here -->
            </tbody>
        </table>
        </div>
        <div id="paginationContainerCustomer" class="d-flex justify-content-center align-items-center mt-3"></div>
    </section>
  
    <section id="customer-balance-section" class="balance-container">
        <h2>Customer Balance</h2>
        <form id="balanceForm" class="balance-form">
            <label for="customerId">Customer ID</label>
            <input type="text" id="customerId" name="customerId" placeholder="Enter your Customer ID">
            <button type="button" id="fetchBalance">Fetch Balance</button>
        </form>
        <div id="balanceResult">
            <h3>Balance Details</h3>
            <table id="balanceTable" class="balance-table">
                <thead>
                    <tr>
                        <th>Invoice ID</th>
                        <th>Amount</th>
                        <th>Due Date</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Data will be dynamically populated -->
                </tbody>
            </table>
        </div>
    </section>
    </main>
    
<footer>
            <a href="#">Contact Us</a> | <a href="#">Privacy Policy | <a href="offers.html">Offers</a>
		<p>&copy; 2024 Aaradhya Pharmaceuticals. All rights reserved.</p>
       </footer>
  <script src="scripts/pagination.js"></script>
  <script src="scripts/config.js"></script>
  <script src="scripts/google-sheets-api.js"></script>
  <script src="scripts/staff.js"></script>
  <script src="scripts/logout.js"></script>
<script>
// Fetch Customer Balance using Google Sheets API
document.getElementById('fetchBalance').addEventListener('click', async () => {
    const customerId = document.getElementById('customerId').value;
    if (!customerId) {
        alert('Please enter a Customer ID');
        return;
    }

    try {
        const response = await fetch('https://script.google.com/macros/s/YOUR_SCRIPT_ID/exec?customerId=' + customerId);
        const data = await response.json();

        // Clear existing rows
        const balanceTableBody = document.querySelector('#balanceTable tbody');
        balanceTableBody.innerHTML = '';

        // Populate table with fetched data
        data.forEach(item => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${item.invoiceId}</td>
                <td>${item.amount}</td>
                <td>${item.dueDate}</td>
                <td>${item.status}</td>
            `;
            balanceTableBody.appendChild(row);
        });
    } catch (error) {
        console.error('Error fetching balance:', error);
        alert('Failed to fetch balance. Please try again later.');
    }
});
</script>
</body>
</html>

//auth.js

document.addEventListener('DOMContentLoaded', () => {
    const loginForm = document.getElementById('loginForm');
    if (!loginForm) {
        console.error('Login form not found');
        return;
    }

    loginForm.addEventListener('submit', async (event) => {
        event.preventDefault();

        const username = document.getElementById('username').value;
        const password = document.getElementById('password').value;
        const errorMessage = document.getElementById('errorMessage');

        errorMessage.textContent = '';

        try {
            if (typeof window.getLoginCredentials !== 'function') {
                throw new Error('API functions not loaded properly');
            }

            const credentials = await window.getLoginCredentials();
            if (!Array.isArray(credentials)) {
                throw new Error('Invalid credentials data received');
            }

            const user = credentials.find(row => row[0] === username && row[1] === password);

            if (user) {
                // Store user info in sessionStorage
                sessionStorage.setItem('isAuthenticated', 'true');
                sessionStorage.setItem('userType', user[2]);
                sessionStorage.setItem('username', username);

                // Redirect based on user type
                if (user[2] === 'staff') {
                    window.location.href = 'staff1.html';
                } else if (user[2] === 'customer') {
                    window.location.href = 'customer.html';
                } else {
                    errorMessage.textContent = 'Unauthorized Access';
                }
            } else {
                errorMessage.textContent = 'Invalid username or password';
            }
        } catch (error) {
            errorMessage.textContent = 'An error occurred. Please try again.';
            console.error('Authentication error:', error);
        }
    });
});

//carousel.js

// carousel.js
let currentIndex = 0;
const slides = document.querySelectorAll('.carousel .slide');

function showSlide(index) {
    slides.forEach((slide, i) => {
        slide.style.transform = `translateX(-${i * 100}%)`; 
    });
}

// Initial slide display
showSlide(currentIndex);

// Example: Basic navigation (you can improve this with buttons)
setInterval(() => {
    currentIndex = (currentIndex + 1) % slides.length; 
    showSlide(currentIndex);
}, 3000); // Change slide every 3 seconds

//config.js
// Google Sheets API Configuration
const config = {
    // Replace this with your actual API key from Google Cloud Console
    // Steps to get API key:
    // 1. Go to https://console.cloud.google.com/
    // 2. Create a new project or select existing one
    // 3. Enable the Google Sheets API:
    //    - Go to "APIs & Services" > "Library"
    //    - Search for "Google Sheets API"
    //    - Click "Enable"
    // 4. Create API key:
    //    - Go to "APIs & Services" > "Credentials"
    //    - Click "Create Credentials" > "API key"
    //    - Copy the generated API key and paste it below
    API_KEY: 'AIzaSyDyr0jy3yjk8ITkalWz3Aq-E6Z9256evxY', // Your API key goes here (it should start with 'AIza')
    
    // Your Google Sheet ID (from the sheet URL)
    SHEET_ID: '1ebu403DhcfqRJ6oVTZJHWT98-wxElQ5nx9djk-JoMp0',
    
    // Required scope for read-only access
    SCOPES: ['https://www.googleapis.com/auth/spreadsheets.readonly']
};

// Never commit this file with your actual API key
// For production, use environment variables or a secure key management service


//customer.js
document.addEventListener('DOMContentLoaded', async () => {
    const ledgerTable = document.getElementById('ledgerTable');
    const paginationContainer = document.getElementById('paginationContainer');
    const username = sessionStorage.getItem('username');

    // Check authentication
    if (!sessionStorage.getItem('isAuthenticated') || sessionStorage.getItem('userType') !== 'customer') {
        window.location.href = '../index.html';
        return;
    }
      document.getElementById("welcome-message").textContent = `Welcome, ${username}!`;
    // Load customer ledger
    const ledger = await window.getLedger();
    const userLedger = ledger.filter(row => row[0] === username);
    userLedger.forEach(row => 
	{
        const tr = document.createElement('tr');
        row.slice(1).forEach(cell => 
	{
            const td = document.createElement('td');
            td.textContent = cell;
            tr.appendChild(td);
        });
        ledgerTable.querySelector('tbody').appendChild(tr);
        });
    paginateTable(ledgerTable, paginationContainer, 10); // Apply pagination
});

//google-sheets-api.js

// Use configuration from config.js (config object is loaded from config.js script)
const BASE_URL = `https://sheets.googleapis.com/v4/spreadsheets/${config.SHEET_ID}/values`;

// Make functions available globally
window.getLoginCredentials = async function() {
    return await fetchSheetData('Login!A2:C');
};

window.getStockData = async function() {
    return await fetchSheetData('Stock!A2:F');
};

window.getCustomerLedger = async function() {
    return await fetchSheetData('CustomerLedger!A2:E');
};
window.getLedger = async function() {
    return await fetchSheetData('Ledger!A2:G');
};

window.getOffers = async function() {
    return await fetchSheetData('Offers!A2:A');
};

// Function to get API key from config
function getApiKey() {
    if (!config.API_KEY) {
        throw new Error('API key not configured. Please set it in config.js');
    }
    return config.API_KEY;
}

// Fetch data from a specific sheet range
async function fetchSheetData(range) {
    const API_KEY = getApiKey();
    const url = `${BASE_URL}/${range}?key=${API_KEY}`;
    
    try {
        const response = await fetch(url);
        if (!response.ok) {
            throw new Error(`Error fetching data: ${response.statusText}`);
        }
        const data = await response.json();
        return data.values || [];
    } catch (error) {
        console.error('Error fetching sheet data:', error);
        throw error;
    }
}

//logout.js
function logout() {
  if (confirm('Are you sure you want to logout?')) {
    // Redirect to the login page or handle session cleanup
    window.location.href = 'index.html';
  }
}

//pagination.js
function paginateTable(table, paginationContainer, rowsPerPage) {
    const tbody = table.querySelector('tbody');
    const rows = Array.from(tbody.rows);
    const totalPages = Math.ceil(rows.length / rowsPerPage);
    let currentPage = 1;

    // Function to render a specific page
    function renderPage(page) {
        tbody.innerHTML = ''; // Clear the table
        const start = (page - 1) * rowsPerPage;
        const end = start + rowsPerPage;
        rows.slice(start, end).forEach(row => 
            tbody.appendChild(row));
    //pageInfo.textContent = Page ${currentPage} of ${totalPages}

        // Update button states
        prevButton.disabled = page === 1;
        nextButton.disabled = page === totalPages;
    }

    // Setup pagination controls
    paginationContainer.innerHTML = ''; // Clear previous controls

    // Create Previous Button
    const prevButton = document.createElement('button');
    prevButton.textContent = 'Previous';
    prevButton.classList.add('btn', 'btn-secondary', 'me-2');
    prevButton.disabled = true; // Initially disabled
    prevButton.onclick = () => {
        if (currentPage > 1) {
            currentPage--;
            renderPage(currentPage);
        }
    };
    paginationContainer.appendChild(prevButton);

    // Create Next Button
    const nextButton = document.createElement('button');
    nextButton.textContent = 'Next';
    nextButton.classList.add('btn', 'btn-secondary', 'ms-2');
    nextButton.disabled = totalPages === 1; // Disable if only one page
    nextButton.onclick = () => {
        if (currentPage < totalPages) {
            currentPage++;
            renderPage(currentPage);
        }
    };
    paginationContainer.appendChild(nextButton);

    // Render the first page
    renderPage(currentPage);
}


//staff.js
document.addEventListener('DOMContentLoaded', async () => {
    const stockTable = document.getElementById('stockTable');
    const customerLedgerTable = document.getElementById('customerLedgerTable');
    const paginationContainerStock = document.getElementById('paginationContainerStock');
    const paginationContainerCustomer = document.getElementById('paginationContainerCustomer');

    // Check authentication
    if (!sessionStorage.getItem('isAuthenticated') || sessionStorage.getItem('userType') !== 'staff') {
        window.location.href = '../index.html';
        return;
    }

    // Load stock data
    const stockData = await window.getStockData();
    stockData.forEach(row => {
        const tr = document.createElement('tr');
        row.forEach(cell => {
            const td = document.createElement('td');
            td.textContent = cell;
            tr.appendChild(td);
        });
        stockTable.querySelector('tbody').appendChild(tr);
    });
    paginateTable(stockTable, paginationContainerStock, 10); // Apply pagination

    // Load customer ledger data
    const customerLedger = await window.getCustomerLedger();
    customerLedger.forEach(row => {
        const tr = document.createElement('tr');
        row.forEach(cell => {
            const td = document.createElement('td');
            td.textContent = cell;
            tr.appendChild(td);
        });
        customerLedgerTable.querySelector('tbody').appendChild(tr);
    });
    paginateTable(customerLedgerTable, paginationContainerCustomer, 10); // Apply pagination
});

//table.js

const tableBody = document.querySelector("#data-table tbody");
const prevBtn = document.getElementById("prev-btn");
const nextBtn = document.getElementById("next-btn");
const pageInfo = document.getElementById("page-info");

let currentPage = 1;
const rowsPerPage = 10;

// Example data
const data = Array.from({ length: 50 }, (_, i) => ({
    id: i + 1,
    name: `Item ${i + 1}`,
    category: `Category ${((i % 5) + 1)}`,
    price: `â‚¹${(i + 1) * 10}`,
}));

function renderTable(page) {
    tableBody.innerHTML = "";
    const start = (page - 1) * rowsPerPage;
    const end = start + rowsPerPage;
    const rows = data.slice(start, end);

    rows.forEach(row => {
        const tr = document.createElement("tr");
        tr.innerHTML = `
            <td>${row.id}</td>
            <td>${row.name}</td>
            <td>${row.category}</td>
            <td>${row.price}</td>
        `;
        tableBody.appendChild(tr);
    });

    pageInfo.textContent = `Page ${currentPage} of ${Math.ceil(data.length / rowsPerPage)}`;
    prevBtn.disabled = page === 1;
    nextBtn.disabled = page === Math.ceil(data.length / rowsPerPage);
}

prevBtn.addEventListener("click", () => {
    if (currentPage > 1) {
        currentPage--;
        renderTable(currentPage);
    }
});

nextBtn.addEventListener("click", () => {
    if (currentPage < Math.ceil(data.length / rowsPerPage)) {
        currentPage++;
        renderTable(currentPage);
    }
});

// Initial render
renderTable(currentPage);

//styles.css

body {
    margin: 0;
    font-family: 'Arial', sans-serif;
    background: linear-gradient(to right, #d9ecf2, #eef6fc);
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: #f4f4f9;
    color: #333;
}
header{
    text-align: center;
    padding: 20px;
    background-color: #4a90e2;
    color: white;
}
header h1 {
    margin: 0;
    font-size: 2rem;
}
.login-container {
     display: flex;
    flex-wrap: wrap;
    justify-content: center;
    padding: 25px;
    gap: 20px;
 
}

.login-group {
    background: white;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    max-width: 300px;
    padding: 15px;
    text-align: center;
    transition: transform 0.3s;
}
.header-group {
  display: flex;
  align-items: center; /* Vertically center the items */
  flex-direction: column; /* Change to column to stack items vertically */

}

.logo{
	max-width: 100px;
	padding: 15px;
	
}

.logo img {
    max-width: 90px;
    margin-bottom: 20px;
object-position: center;
}

.login-form h2 {

    margin: 15px 0;
    font-size: 1.5rem;
    color: #4a90e2;
}

.login-form label {
    display: block;
    margin-bottom: 5px;
    font-size: 14px;
    font-weight: 500;
    color: #7f8c8d;
}

.login-form input {

    width: 100%;
    padding: 10px 15px;
    margin-bottom: 15px;
    border: 1px solid #bdc3c7;
    border-radius: 6px;
    font-size: 14px;
    transition: border-color 0.3s ease;
}

.login-form input:focus {
    border-color: #3498db;
    outline: none;
}

.login-form button {
    padding: 10px 15px;
    background-color: #4a90e2;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 1rem;
    transition: background-color 0.3s;
}

.login-form button:hover {
    background-color: #357abd;
}

.forgot-password {
    margin-top: 10px;
    font-size: 14px;
    color: #4a90e2;
    text-decoration: none;
}

.forgot-password:hover {
    text-decoration: underline;
}

footer {
    text-align: center;
    padding: 10px;
    background-color: #333;
    color: white;
    font-size: 0.8rem;
}
/* For screens smaller than 768px */
@media (max-width: 768px) {
  .header-group img {
    max-width: 100%; /* Image will take up full width of its container */
    height: auto; /* Maintain aspect ratio */
  }
}

/* For screens larger than 768px */
@media (min-width: 769px) {
  .header-group img {
    max-width: 50%; /* Image will take up 50% of its container's width */
    height: auto; /* Maintain aspect ratio */
  }
}
``
/* For smaller screens */
@media (max-width: 768px) {
  .login-container {
    flex-direction: column; /* Stack items vertically on smaller screens */
  }
}

/* For larger screens */
@media (min-width: 769px) {
  .login-container {
    flex-direction: row; /* Arrange items horizontally on larger screens */
  }
}
input#password, input#username {
  padding: 0; /* Remove all padding */
  /* Or adjust padding to match the labels' visual size */
  /* padding: 2px 5px;  For example */
}

//table.css
body {
    margin: 0;
    font-family: 'Arial', sans-serif;
    background: linear-gradient(to right, #d9ecf2, #eef6fc);
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: #f4f4f9;
    color: #333;
}
header{
    text-align: center;
    padding: 20px;
    background-color: #4a90e2;
    color: white;
}
header h1 {
    margin: 0;
    font-size: 2rem;
}
.login-container {
     display: flex;
    flex-wrap: wrap;
    justify-content: center;
    padding: 25px;
    gap: 20px;
 
}

.login-group {
    background: white;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    max-width: 300px;
    padding: 15px;
    text-align: center;
    transition: transform 0.3s;
}
.header-group {
  display: flex;
  align-items: center; /* Vertically center the items */
  flex-direction: column; /* Change to column to stack items vertically */

}

.logo{
	max-width: 100px;
	padding: 15px;
	
}

.logo img {
    max-width: 90px;
    margin-bottom: 20px;
object-position: center;
}

.login-form h2 {

    margin: 15px 0;
    font-size: 1.5rem;
    color: #4a90e2;
}

.login-form label {
    display: block;
    margin-bottom: 5px;
    font-size: 14px;
    font-weight: 500;
    color: #7f8c8d;
}

.login-form input {

    width: 100%;
    padding: 10px 15px;
    margin-bottom: 15px;
    border: 1px solid #bdc3c7;
    border-radius: 6px;
    font-size: 14px;
    transition: border-color 0.3s ease;
}

.login-form input:focus {
    border-color: #3498db;
    outline: none;
}

.login-form button {
    padding: 10px 15px;
    background-color: #4a90e2;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 1rem;
    transition: background-color 0.3s;
}

.login-form button:hover {
    background-color: #357abd;
}

.forgot-password {
    margin-top: 10px;
    font-size: 14px;
    color: #4a90e2;
    text-decoration: none;
}

.forgot-password:hover {
    text-decoration: underline;
}

footer {
    text-align: center;
    padding: 10px;
    background-color: #333;
    color: white;
    font-size: 0.8rem;
}
/* For screens smaller than 768px */
@media (max-width: 768px) {
  .header-group img {
    max-width: 100%; /* Image will take up full width of its container */
    height: auto; /* Maintain aspect ratio */
  }
}

/* For screens larger than 768px */
@media (min-width: 769px) {
  .header-group img {
    max-width: 50%; /* Image will take up 50% of its container's width */
    height: auto; /* Maintain aspect ratio */
  }
}
``
/* For smaller screens */
@media (max-width: 768px) {
  .login-container {
    flex-direction: column; /* Stack items vertically on smaller screens */
  }
}

/* For larger screens */
@media (min-width: 769px) {
  .login-container {
    flex-direction: row; /* Arrange items horizontally on larger screens */
  }
}
input#password, input#username {
  padding: 0; /* Remove all padding */
  /* Or adjust padding to match the labels' visual size */
  /* padding: 2px 5px;  For example */
}

//offers.css

body {
    margin: 0;
    font-family: 'Arial', sans-serif;
    background: linear-gradient(to right, #d9ecf2, #eef6fc);
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: #f4f4f9;
    color: #333;
}

header {
    text-align: center;
    padding: 20px;
    background-color: #4a90e2;
    color: white;
}

header h1 {
    margin: 0;
    font-size: 2rem;
}
.offers-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    padding: 25px;
    gap: 20px;
}

.offer-card {
    background: white;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    max-width: 300px;
    padding: 15px;
    text-align: center;
    transition: transform 0.3s;
}

.offer-card:hover {
    transform: scale(1.05);
}

.offer-card img {
    width: 100%;
    border-radius: 10px 10px 0 0;
}

.offer-card h2 {
    margin: 15px 0;
    font-size: 1.5rem;
    color: #4a90e2;
}

.offer-card p {
    font-size: 0.9rem;
    color: #666;
    margin-bottom: 20px;
}

.offer-card button {
    padding: 10px 15px;
    background-color: #4a90e2;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 1rem;
    transition: background-color 0.3s;
}

.offer-card button:hover {
    background-color: #357abd;
}

footer {
    text-align: center;
    padding: 10px;
    background-color: #333;
    color: white;
    font-size: 0.8rem;
}
/* For screens smaller than 768px */
@media (max-width: 768px) {
  .header-group img {
    max-width: 100%; /* Image will take up full width of its container */
    height: auto; /* Maintain aspect ratio */
  }
}

/* For screens larger than 768px */
@media (min-width: 769px) {
  .header-group img {
    max-width: 50%; /* Image will take up 50% of its container's width */
    height: auto; /* Maintain aspect ratio */
  }
}
``
/* For smaller screens */
@media (max-width: 768px) {
  .login-container {
    flex-direction: column; /* Stack items vertically on smaller screens */
  }
}

/* For larger screens */
@media (min-width: 769px) {
  .login-container {
    flex-direction: row; /* Arrange items horizontally on larger screens */
  }
}





